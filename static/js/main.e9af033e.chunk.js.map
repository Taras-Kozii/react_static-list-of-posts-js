{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","commet","name","email","body","className","href","CommentList","commets","map","comment","id","UserInfo","user","PostInfo","post","title","comments","length","PostList","posts","getUser","users","userId","find","updatedPosts","postsFromServer","usersFromServer","commentsFromServer","postId","filter","App","ReactDOM","render","document","getElementById"],"mappings":"uz8IAAO,SAASA,EAAT,GAAkC,IAAXC,EAAU,EAAVA,OACpBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAErB,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,O,MChBF,SAASG,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QAC5B,OACE,qBAAKH,UAAU,cAAf,SACGG,EAAQC,KAAI,SAAAC,GAAO,OAClB,cAACV,EAAD,CAAaC,OAAQS,GAAcA,EAAQC,S,MCL5C,SAASC,EAAT,GAA6B,IAATC,EAAQ,EAARA,KACjBX,EAAgBW,EAAhBX,KAAMC,EAAUU,EAAVV,MAEd,OACE,mBAAGE,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,I,MCHA,SAASY,EAAT,GAA6B,IAATC,EAAQ,EAARA,KACjBC,EAAgCD,EAAhCC,MAAOZ,EAAyBW,EAAzBX,KAAMS,EAAmBE,EAAnBF,KAAMI,EAAaF,EAAbE,SAE3B,OACE,sBAAKZ,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCW,IAEjC,8BACG,eAED,cAAC,EAAD,CAAUH,KAAMA,UAIpB,mBAAGR,UAAU,iBAAb,SACGD,IAGH,uBACEa,EAASC,OAAS,EACf,cAAC,EAAD,CAAaV,QAASS,IACtB,mBAAG,UAAQ,oBAAX,gCCxBJ,SAASE,EAAT,GACL,OADkC,EAATC,MACXX,KAAI,SAAAM,GAAI,OACpB,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,O,yBCGpC,SAASU,EAAQC,EAAOC,GACtB,OAAOD,EAAME,MAAK,SAAAX,GAAI,OAAIA,EAAKF,KAAOY,KAOxC,IAAME,EAAeC,EAAgBjB,KAAI,SAAAM,GAAI,kCAEtCA,GAFsC,IAGzCF,KAAMQ,EAAQM,EAAiBZ,EAAKQ,QACpCN,UARiBA,EAQKW,EARKC,EAQed,EAAKJ,GAP1CM,EAASa,QAAO,SAAApB,GAAO,OAAIA,EAAQmB,SAAWA,QADvD,IAAqBZ,EAAUY,KAYlBE,EAAM,kBACjB,0BAAS1B,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAACc,EAAD,CAAUC,MAAOK,QCtBrBO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e9af033e.chunk.js","sourcesContent":["export function CommentInfo({ commet }) {\n  const { name, email, body } = commet;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n}\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport function CommentList({ commets }) {\n  return (\n    <div className=\"CommentList\">\n      {commets.map(comment => (\n        <CommentInfo commet={comment} key={comment.id} />\n      ))}\n    </div>\n  );\n}\n","import './UserInfo.scss';\n\nexport function UserInfo({ user }) {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n}\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport function PostInfo({ post }) {\n  const { title, body, user, comments } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{title}</h3>\n\n        <p>\n          {' Posted by  '}\n\n          <UserInfo user={user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      <hr />\n      {(comments.length > 0)\n        ? (<CommentList commets={comments} />)\n        : (<b data-cy=\"NoCommentsMessage\">No comments yet</b>)\n      }\n    </div>\n  );\n}\n","import { PostInfo } from '../PostInfo';\n\nexport function PostList({ posts }) {\n  return (posts.map(post => (\n    <PostInfo post={post} key={post.id} />\n  )));\n}\n","import './App.scss';\nimport { PostList } from './components/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getUser(users, userId) {\n  return users.find(user => user.id === userId);\n}\n\nfunction getComments(comments, postId) {\n  return comments.filter(comment => comment.postId === postId);\n}\n\nconst updatedPosts = postsFromServer.map(post => (\n  {\n    ...post,\n    user: getUser(usersFromServer, post.userId),\n    comments: getComments(commentsFromServer, post.id),\n  }\n));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={updatedPosts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}